Coding Questions

1. Remove duplicates from an arrayList, keep last element
   input = [5, 6, 8, 1, 5, 0, 1]
   output = [6, 8, 5, 0, 1]

2. Find all pairs in sorted arrayList having sum = k
   input = [1, 5, 6, 6, 7 ] , 12
   output = (6, 6) (5, 7)

3. Traverse a matrix in spiral form
    input= [[1, 2, 3, 4],
           [5, 6, 7, 8],
           [9, 10, 11, 12],
           [13, 14, 15,16]] 
    Output: 
    1 2 3 4 8 12 16 15 14 13 9 5 6 7 11 10
 
4. 
    Hungry Jerry's Survival
    Jerry is very hungry and is planning to eat as many cheese cakes as possible from Tom's food market.
    In Tom's food market, all cheese cakes are stored in n packets arranged horizontally from 1 to n.
    Each packet contains certain number of cheese cakes.
    The only catch is, Tom has previously spotted Jerry's food stealing behavior.
    So, Tom has set a trap for Jerry as follows:
    - If Jerry eats cheese cakes from any 2 adjacent packets, he (Jerry) will die of Food poisoning.
    Given an integer array “packets” - representing the number of cheese cakes in each packet, return the maximum number of cheese cakes Jerry can eat without getting died of Food Poisoning.
    
    Example 1:
    Input: packets = [1,2,3,1]
    Output: 4
    Explanation: Jerry eats from packet 1 (no. of cheesecakes = 1) and then eats from packet 3 (no. of cheesecakes = 3).
    Total cheesecakes Jerry can eat = 1 + 3 = 4.
    
    Example 2:
    Input: packets = [2,7,9,3,1]
    Output: 12
    Explanation: Jerry eats from packet 1 (no. of cheesecakes = 2), then eats from packet 3 (no. of cheesecakes = 9) and further eat from packet 5 (no. of cheesecakes = 1).
    Total cheesecakes Jerry can eat = 2 + 9 + 1 = 12.